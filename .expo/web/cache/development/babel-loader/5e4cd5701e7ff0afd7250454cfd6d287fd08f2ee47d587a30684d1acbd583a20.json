{"ast":null,"code":"import React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport LabelledInput from \"./LabelledInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Form(props) {\n  var computeCardNumber = function computeCardNumber(str) {\n    var digitsOnly = str.replace(/\\D/g, '');\n    var formattedStr = '';\n    for (var i = 0; i < digitsOnly.length; i++) {\n      formattedStr += digitsOnly[i];\n      if ((i + 1) % 4 === 0 && i < digitsOnly.length - 1) {\n        formattedStr += ' ';\n      }\n    }\n    if (formattedStr.length > 19) {\n      formattedStr = formattedStr.substring(0, 20);\n    }\n    return formattedStr;\n  };\n  return _jsxs(View, {\n    style: styles.main,\n    children: [_jsx(Image, {\n      style: styles.card,\n      source: {\n        uri: require(\"../assets/card.jpeg\")\n      }\n    }), _jsx(LabelledInput, {\n      style: {\n        margintop: '40%'\n      },\n      computeText: computeCardNumber,\n      text: \"Card Number\",\n      placeholder: \"XXXX-XXXX-XXXX-XXXX\"\n    }), _jsx(LabelledInput, {\n      computeText: function computeText() {},\n      text: \"Card Name\",\n      placeholder: \"Jacques Chirac\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.submitButton,\n      children: _jsx(Text, {\n        style: styles.submitButtonText,\n        children: \"Submit\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  main: {\n    width: '80%',\n    height: '50%',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    shadowColor: '#171717',\n    shadowOffset: {\n      width: 0,\n      height: 6\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 10\n  },\n  card: {\n    width: \"80%\",\n    height: \"35%\",\n    position: 'absolute',\n    top: \"-17%\",\n    left: \"10%\",\n    borderRadius: 15\n  },\n  submitButton: {\n    marginTop: 20,\n    padding: 10,\n    backgroundColor: \"#0055D4\",\n    borderRadius: 3,\n    width: \"84%\",\n    marginLeft: \"8%\"\n  },\n  submitButtonText: {\n    color: \"white\",\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","View","Image","TouchableOpacity","Text","LabelledInput","jsx","_jsx","jsxs","_jsxs","Form","props","computeCardNumber","str","digitsOnly","replace","formattedStr","i","length","substring","style","styles","main","children","card","source","uri","require","margintop","computeText","text","placeholder","submitButton","submitButtonText","create","width","height","backgroundColor","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","position","top","left","marginTop","padding","marginLeft","color","textAlign"],"sources":["/Users/alex/Desktop/Cours/InteractionProgramming/Lab2/Components/Form.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet , View, Image, TouchableOpacity, Text } from 'react-native';\nimport LabelledInput from './LabelledInput';\n\nexport default function Form(props) {\n    const computeCardNumber = (str) => {\n        const digitsOnly = str.replace(/\\D/g, '');\n    \n        let formattedStr = '';\n        for (let i = 0; i < digitsOnly.length; i++) {\n            formattedStr += digitsOnly[i];\n            if ((i + 1) % 4 === 0 && i < digitsOnly.length - 1) {\n                formattedStr += ' ';\n            }\n        }\n        if(formattedStr.length > 19) {\n            formattedStr = formattedStr.substring(0, 20);\n        }\n        return formattedStr;\n    }\n    \n\n    return (\n        <View style={styles.main}>\n            <Image style={styles.card} source={{uri: require('../assets/card.jpeg')}}/>\n            <LabelledInput style={{margintop: '40%'}} computeText={computeCardNumber} text='Card Number' placeholder='XXXX-XXXX-XXXX-XXXX'/>\n            <LabelledInput computeText={() => {}} text='Card Name' placeholder='Jacques Chirac'/>\n            <TouchableOpacity style={styles.submitButton}>\n                <Text style={styles.submitButtonText}>Submit</Text>\n            </TouchableOpacity>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    main: {\n        width: '80%',\n        height: '50%',\n        backgroundColor: 'white',\n        borderRadius: 10,\n        shadowColor: '#171717',\n        shadowOffset: {width: 0, height: 6},\n        shadowOpacity: 0.2,\n        shadowRadius: 10,\n    },\n    card: {\n        width: \"80%\",\n        height: \"35%\",\n        position: 'absolute',\n        top: \"-17%\",\n        left: \"10%\",\n        borderRadius: 15\n    },\n    submitButton: {\n        marginTop: 20,\n        padding: 10,\n        backgroundColor: \"#0055D4\",\n        borderRadius: 3,\n        width: \"84%\",\n        marginLeft: \"8%\"\n    },\n    submitButtonText: {\n        color: \"white\",\n        textAlign: 'center'\n    }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}